{"version":3,"sources":["main.css","lib-utility/_valuables.scss","lib-utility/_media.scss"],"names":[],"mappings":"AAAA,gBAAgB;ACAhB;;iDDGiD;ACGjD;;iDDAiD;ACqCjD;;iDDlCiD;AETjD;;iDFYiD;AEkDjD;;iDF/CiD;AEoIjD;;iDFjIiD","file":"main.css","sourcesContent":["@charset \"UTF-8\";\n/*================================================\n        カラーアセット\n================================================*/\n/*================================================\n        ブレイクポイント\n================================================*/\n/*================================================\n        areaユーティリティで使用\n================================================*/\n/*================================================\n        ブレイクポイント\n================================================*/\n/*================================================\n        レスポンシブスタイルのmixin\n================================================*/\n/*================================================\n      ブレイクポイントの基準でコンパイル順を変える\n================================================*/\n","/*================================================\n        カラーアセット\n================================================*/\n$v_black:#333;\n$v_white:#fff;\n\n/*================================================\n        ブレイクポイント\n================================================*/\n//ブレイクポイントの基準 コンパイルの順序を設定している。\n//minかmaxを指定　\n//minなら\n//数値が高いクラスが優先度が高くなる（u-mt-10 u-mt-20と充てると、u-mt-20が適応される)\n//ブレイクポインもmin系統の優先度が高くなる (u-mt-10-sm u-mt-smx なら u-mt-10-smが適応される)\n//maxなら↑の優先度が逆転する\n$v_bp_std: \"min\";\n\n//min ブレイクポイント\n//bootstrap準拠\n$v_sm: 576;\n$v_md: 768;\n$v_lg: 992;\n$v_xl: 1200;\n//max　ブレイクポイント\n$v_xlx: 1199;\n$v_lgx: 991;\n$v_mdx: 767;\n$v_smx: 575;\n\n//ブレイクポイント設定\n$v_bp_min_map: (\"sm\":$v_sm, \"md\": $v_md, \"lg\":$v_lg, \"xl\":$v_xl,);\n$v_bp_max_map: (\"xlx\":$v_xlx, \"lgx\":$v_lgx, \"mdx\":$v_mdx, \"smx\":$v_smx,);\n\n//コンパイル順序に関係\n$v_bp_min: map-keys($v_bp_min_map);\n$v_bp_max: map-keys($v_bp_max_map);\n$v_media_list: ();\n@if ($v_bp_std == \"min\") {\n  $v_media_list: join($v_bp_max, $v_bp_min);\n} @else if (\"max\") {\n  $v_media_list: join($v_bp_min, $v_bp_max);\n}\n\n/*================================================\n        areaユーティリティで使用\n================================================*/\n$v_px: 8;//8の倍数でpxが指定される\n$v_px_max_roop:5;// 8*50pxまで作れる。\n\n$v_percent: 5;//5の倍数で%が指定される\n$v_percent_max_roop: (100 / $v_percent);//100%まで作れる","/*================================================\n        ブレイクポイント\n================================================*/\n@mixin u-media-min($bp_p) {\n  @media screen and (min-width:#{$bp_p}px) {\n    @content;\n  }\n}\n@mixin u-media-max($bp_p) {\n  @media screen and (max-width:#{$bp_p}px) {\n    @content;\n  }\n}\n@mixin u-media($bp_p_min, $bp_p_min) {\n  @media screen and (min-width:#{$bp_p_maxn}px) and (max-width:#{$bp_p_min}px) {\n    @content;\n  }\n}\n\n//min\n@mixin u-media-sm {\n  @media screen and (min-width:#{$v_sm}px) {\n    @content;\n  }\n}\n@mixin u-media-md {\n  @media screen and (min-width:#{$v_md}px) {\n    @content;\n  }\n}\n@mixin u-media-lg {\n  @media screen and (min-width:#{$v_lg}px) {\n    @content;\n  }\n}\n@mixin u-media-xl {\n  @media screen and (min-width:#{$v_xl}px) {\n    @content;\n  }\n}\n\n//max\n@mixin u-media-xlx {\n  @media screen and (max-width:#{$v_xlx}px) {\n    @content;\n  }\n}\n@mixin u-media-lgx {\n  @media screen and (max-width:#{$v_lgx}px) {\n    @content;\n  }\n}\n@mixin u-media-mdx {\n  @media screen and (max-width:#{$v_mdx}px) {\n    @content;\n  }\n}\n@mixin u-media-smx {\n  @media screen and (max-width:#{$v_smx}px) {\n    @content;\n  }\n}\n/*================================================\n        レスポンシブスタイルのmixin\n================================================*/\n//レスポンシブ対応　スタイル一つだけ\n//$bpはブレイクポイント smとかの文字列\n@mixin u_rsp($bp, $style, $value) {\n  @each $bp_key in $v_bp_min {\n    @if ($bp == $bp_key) {\n      @media screen and (min-width:#{map-get($v_bp_min_map, $bp)}px) {\n        #{$style}: #{$value};\n      }\n    }\n  }\n  @each $bp_key in $v_bp_max {\n    @if ($bp == $bp_key) {\n      @media screen and (max-width:#{map-get($v_bp_max_map, $bp)}px) {\n        #{$style}: #{$value};\n      }\n    }\n  }\n}\n//レスポンシブ対応　スタイル複数　\n//$styles:(margin:10px, padding:20px, width:100px);という具合で渡すと使えます\n@mixin u_rsp_multi($bp, $styles) {\n\n  @each $bp_key in $v_bp_min {\n    @if ($bp == $bp_key) {\n      @media screen and (min-width:#{map-get($v_bp_min_map, $bp)}px) {\n        @each $key, $value in $styles {\n          #{$key}: #{$value};\n        }\n      }\n    }\n  }\n  @each $bp_key in $v_bp_max {\n    @if ($bp == $bp_key) {\n      @media screen and (max-width:#{map-get($v_bp_max_map, $bp)}px) {\n        @each $key, $value in $styles {\n          #{$key}: #{$value};\n        }\n      }\n    }\n  }\n}\n\n@mixin u_rsp__ch($bp, $style, $value) {\n  > * {\n    @each $bp_key in $v_bp_min {\n      @if ($bp == $bp_key) {\n        @media screen and (min-width:#{map-get($v_bp_min_map, $bp)}px) {\n          #{$style}: #{$value};\n        }\n      }\n    }\n    @each $bp_key in $v_bp_max {\n      @if ($bp == $bp_key) {\n        @media screen and (max-width:#{map-get($v_bp_max_map, $bp)}px) {\n          #{$style}: #{$value};\n        }\n      }\n    }\n  } \n}\n@mixin u_rsp_multi__ch($bp, $styles) {\n  > * {\n    @each $bp_key in $v_bp_min {\n      @if ($bp == $bp_key) {\n        @media screen and (min-width:#{map-get($v_bp_min_map, $bp)}px) {\n          @each $key, $value in $styles {\n            #{$key}: #{$value};\n          }\n        }\n      }\n    }\n    @each $bp_key in $v_bp_max {\n      @if ($bp == $bp_key) {\n        @media screen and (max-width:#{map-get($v_bp_max_map, $bp)}px) {\n          @each $key, $value in $styles {\n            #{$key}: #{$value};\n          }\n        }\n      }\n    }    \n  }\n}\n/*================================================\n      ブレイクポイントの基準でコンパイル順を変える\n================================================*/\n//ブレイクポイントの基準を判定\n//基準がmin⇒数値は昇順\n//基準がmax⇒数値は降順\n//ループカウンター、倍数, カウンター最大値)\n@function set_Prop_by_Bp_Std ($i, $unit_value, $max_roop) {\n  \n  //$v_bp_stdはブレイクポイントの基準\n  @if ($v_bp_std == \"min\") {\n    @return $i * $unit_value;\n\n  } @else if ($v_bp_std == \"max\") {\n    @return  ($max_roop * $i - $i * $unit_value);\n  }\n}\n\n//レスポンシブ\n@function set_Prop_by_Bp_Std_and_Bp ($i, $unit_value, $max_roop, $bp) {\n  @each $bp_key in $v_bp_min {\n    @if ($bp == $bp_key) {\n      @return $i * $unit_value;\n    }\n  }\n  @each $bp_key in $v_bp_max {\n    @if ($bp == $bp_key) {\n      @return  ($max_roop * $unit_value - $i * $unit_value);\n    }\n  }\n}\n\n\n//%を充てるスタイルに使う\n@function set_PerProp_by_Bp_Std ($i, $max_roop) {\n  \n  //$v_bp_stdはブレイクポイントの基準\n  @if ($v_bp_std == \"min\") {\n    @return $i * $v_percent;\n\n  } @else if ($v_bp_std == \"max\") {\n    @return  $max_roop * $v_percent - ($i - 1) * $v_percent;\n  }\n}\n@function set_PerProp_by_Bp_Std_and_Bp ($i, $max_roop, $bp) {\n\n  //$v_bp_stdはブレイクポイントの基準\n  @each $bp_key in $v_bp_min {\n    @if ($bp == $bp_key) {\n      @return $i * $v_percent;\n    }\n  }\n  @each $bp_key in $v_bp_max {\n    @if ($bp == $bp_key) {\n      @return  $max_roop * $v_percent - ($i - 1) * $v_percent;\n    }\n  }\n}\n//%を充てるスタイルに使う\n@function set_Equal_PerProp_by_Bp_Std ($i) {\n  \n  //$v_bp_stdはブレイクポイントの基準\n  @if ($v_bp_std == \"min\") {\n    //@return (\"name\": $i, \"value\": (100.0000 / $i));\n    @return (100.0000 / $i);\n\n  } @else if ($v_bp_std == \"max\") {\n    @return  $max_child / $i * $v_percent;\n  }\n}\n@function set_Equal_PerProp_by_Bp_Std_and_Bp ($i, $max_child, $bp) {\n\n  //$v_bp_stdはブレイクポイントの基準\n  @each $bp_key in $v_bp_min {\n    @if ($bp == $bp_key) {\n      @return (100.0000 / $i);\n    }\n  }\n  @each $bp_key in $v_bp_max {\n    @if ($bp == $bp_key) {\n      @return (100.0000 / $i);\n    }\n  }\n}\n\n@function set_Counter_for_rsp ($value) {\n  @if ($v_bp_std == \"min\") {\n    @return $value;\n\n  } @else if ($v_bp_std == \"max\") {\n\n    @if ($value == 1) {\n      $value:5;\n\n    } @else if ($value == 2) {\n      $value:4;\n\n    } @else if ($value == 4) {\n\n      $value:2;\n    } @else if ($value == 5) {\n\n      $value:1;\n    }\n    @return $value;\n  }\n  \n}"]}